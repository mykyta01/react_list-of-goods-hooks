{"version":3,"sources":["components/GoodsList.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","visibleGoods","preparedGoods","sort","goodA","goodB","localeCompare","length","getPreparedGoods","className","onClick","type","cn","currentState","ReactDOM","render","document","getElementById"],"mappings":"uPAIaA,EAAsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjD,6BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,SCDjBC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SAmCnB,IAAMC,EAAgB,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAkB,GAAhD,mBAAOG,EAAP,KAAgBC,EAAhB,KACMC,EA/BR,SACEZ,EADF,GAGa,IADTQ,EACQ,EADRA,UAAWE,EACH,EADGA,QAEPG,EAAa,YAAOb,GAqB1B,OAnBIQ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKJ,EACH,OAAOW,EAAME,cAAcD,GAE7B,KAAKX,EACH,OAAOU,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAcH,UAGTG,EAMcM,CAAiBhB,EAAiB,CACrDK,YACAE,YAQF,OACE,sBAAKU,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAaL,IAC5BkB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYf,IAAcJ,IAJ9B,iCAUA,wBACEiB,QAAS,kBAAMZ,EAAaJ,IAC5BiB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYf,IAAcH,IAJ9B,4BAUA,wBACEgB,QAAS,kBAAMV,GAAW,SAAAa,GAAY,OAAKA,MAC3CF,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,YAAab,IAJjB,sBAUEF,GAAaE,IACb,wBACEW,QAxCI,WACZZ,EAAa,IACbE,GAAW,IAuCHW,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,cAAC,EAAD,CAAWpB,MAAOY,QC9GxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8695a34a.chunk.js","sourcesContent":["type GoodsListProps = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<GoodsListProps> = ({ goods }) => (\n  <ul>\n    {goods.map((good) => (\n      <li data-cy=\"Good\" key={good}>\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport { GoodsList } from './components/GoodsList';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\ntype SortingOptions = {\n  sortField: string;\n  reverse: boolean;\n};\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortField, reverse }: SortingOptions,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((goodA, goodB) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return goodA.localeCompare(goodB);\n\n        case SORT_FIELD_LENGTH:\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<string>('');\n  const [reverse, setReverse] = useState<boolean>(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    reverse,\n  });\n\n  const reset = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_NAME,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(currentState => !currentState)}\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverse,\n          })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <GoodsList goods={visibleGoods} />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}